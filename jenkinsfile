pipeline {
    agent any
    stages {
        stage ('Pull Github Code') { //git cloning code from spring-petclinic
            steps {
                script {
                    dir('gitlab-code') {
                        echo 'gitlab-code'
                        sh 'rm -rf /var/lib/jenkins/workspace/jfrogpipeline/gitlab-code/spring-petclinic'
                        sh 'rm -rf /var/lib/jenkins/workspace/jfrogpipeline/gitlab-code/jfrogpipeline'
                        sh 'cd /var/lib/jenkins/workspace/jfrogpipeline/gitlab-code'
                        sh 'git clone -b main http://github.com/spring-projects/spring-petclinic.git'
                    }
                }
            }
        }
        stage ('Compile code Stage') { //mvn compile code stage.
            steps {
                script {
                    dir('/var/lib/jenkins/workspace/jfrogpipeline/gitlab-code/spring-petclinic') {
                        sh 'mvn clean install'
                    }
                } 
            }
        }

        stage ('Run Testing Stage') { // mvn test execution stage
            steps {
                script {
                    dir("/var/lib/jenkins/workspace/jfrogpipeline/gitlab-code/spring-petclinic") {
                        sh 'mvn test'
                    }
                }
            }
        }

        stage ('package project as docker image') {// build image to push to artifactor
            steps {
                 script {
                        dir ("/var/lib/jenkins/workspace/jfrogpipeline/gitlab-code/spring-petclinic") {
                            sh "touch Dockerfile"
                            sh "echo 'FROM openjdk:8-jdk-alpine' >> Dockerfile"
                            sh "echo 'USER root' >> Dockerfile"
                            sh "echo 'COPY target/spring-petclinic-2.6.0-SNAPSHOT.jar spring-petclinic-2.6.0-SNAPSHOT.jar' >> Dockerfile"
                            sh 'echo ENTRYPOINT ["java","-jar","/spring-petclinic-2.6.0-SNAPSHOT.jar"] >> Dockerfile'
                            sh 'docker build -f Dockerfile  -t spring-petclinic .'
                        }
                 }
             }
         }
         stage ('Push image to Artifactory') { // take that image and push to artifactory
           steps {
               dir ("/var/lib/jenkins/workspace/jfrogpipeline/gitlab-code/spring-petclinic") {
    
                 sh 'docker login -u admin -p admin@123 ec2-52-200-236-148.compute-1.amazonaws.com:8081'
                 sh 'docker tag ec2-52-200-236-148.compute-1.amazonaws.com:8081/artifactory/docker_build/spring-petclinic:latest'
                 sh 'docker push ec2-52-200-236-148.compute-1.amazonaws.com:8081//artifactory/docker_build//spring-petclinic:latest'
                echo "publis to git repo"
            }
        }
     }
   }
}
